--- a/tests/samplebinding/overflow_test.py
+++ b/tests/samplebinding/overflow_test.py
@@ -45,7 +45,7 @@ class OverflowTest(unittest.TestCase):
         '''C++ function receives an long long argument and raise OverflowError if the value is negative.'''
         val = 100
         self.assertEqual(doubleLongLong(val), 2 * val)
-        val = long(100)
+        val = int(100)
         self.assertEqual(doubleLongLong(val), 2 * val)
         val = (2 << 64) + 1
         self.assertRaises(OverflowError, doubleLongLong, val)
@@ -54,7 +54,7 @@ class OverflowTest(unittest.TestCase):
         '''C++ function receives an unsigned long long argument and raise OverflowError if the value is negative.'''
         val = 100
         self.assertEqual(doubleUnsignedLongLong(val), 2 * val)
-        val = long(100)
+        val = int(100)
         self.assertEqual(doubleUnsignedLongLong(val), 2 * val)
         val *= -1
         self.assertRaises(OverflowError, doubleUnsignedLongLong, val)
--- a/tests/minimalbinding/typedef_test.py
+++ b/tests/minimalbinding/typedef_test.py
@@ -30,7 +30,7 @@ from py3kcompat import IS_PY3K
 
 try:
     import numpy as np
-except ImportError, e:
+except ImportError:
     np = None
 
 
